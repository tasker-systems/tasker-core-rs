#!/bin/bash

# Generate Test Certificates and Keys for Web API Integration Tests
# This script generates self-signed TLS certificates and JWT key pairs for testing

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
CERTS_DIR="$PROJECT_ROOT/tests/web/certs"
KEYS_DIR="$PROJECT_ROOT/tests/web/keys"

echo "🔐 Generating test certificates and keys for web API integration tests..."

# Create directories
mkdir -p "$CERTS_DIR"
mkdir -p "$KEYS_DIR"

# Generate self-signed TLS certificate for HTTPS testing
echo "📜 Generating self-signed TLS certificate..."
openssl req -x509 -newkey rsa:4096 -keyout "$CERTS_DIR/server.key" -out "$CERTS_DIR/server.crt" \
    -days 365 -nodes -subj "/C=US/ST=Test/L=Test/O=TaskerCore/OU=WebAPI/CN=localhost"

# Generate JWT key pair (RS256 algorithm)
echo "🔑 Generating JWT key pair (RS256)..."

# Generate private key
openssl genrsa -out "$KEYS_DIR/jwt_private.pem" 2048

# Generate public key from private key
openssl rsa -in "$KEYS_DIR/jwt_private.pem" -pubout -out "$KEYS_DIR/jwt_public.pem"

# Convert keys to single-line format for environment variables
echo "📋 Converting keys to environment variable format..."

# Convert private key to single line
JWT_PRIVATE_KEY=$(cat "$KEYS_DIR/jwt_private.pem" | tr -d '\n')
echo "JWT_PRIVATE_KEY=\"$JWT_PRIVATE_KEY\"" > "$KEYS_DIR/jwt_keys.env"

# Convert public key to single line
JWT_PUBLIC_KEY=$(cat "$KEYS_DIR/jwt_public.pem" | tr -d '\n')
echo "JWT_PUBLIC_KEY=\"$JWT_PUBLIC_KEY\"" >> "$KEYS_DIR/jwt_keys.env"

# Generate a test API key
API_KEY=$(openssl rand -hex 32)
echo "API_KEY=\"$API_KEY\"" >> "$KEYS_DIR/jwt_keys.env"

# Create .env file for web tests
echo "📝 Creating web test environment file..."
cat > "$PROJECT_ROOT/.env.web_test" << EOF
# Web API Integration Test Environment Configuration
# Generated by scripts/generate_test_certs.sh

# Database Configuration
DATABASE_URL=postgresql://tasker:tasker@localhost/tasker_rust_test

# Web API Configuration
WEB_API_ENABLED=true
WEB_API_BIND_ADDRESS=127.0.0.1:8080
WEB_API_TLS_ENABLED=false
WEB_API_TLS_CERT_PATH=$CERTS_DIR/server.crt
WEB_API_TLS_KEY_PATH=$CERTS_DIR/server.key

# Authentication Configuration
WEB_AUTH_ENABLED=true
WEB_JWT_ISSUER=tasker-core-test
WEB_JWT_AUDIENCE=tasker-api-test
WEB_JWT_TOKEN_EXPIRY_HOURS=1

# Load JWT keys from generated files
$(cat "$KEYS_DIR/jwt_keys.env")

# CORS Configuration
WEB_CORS_ENABLED=true
WEB_CORS_ALLOWED_ORIGINS=http://localhost:3000,https://localhost:3000

# Rate Limiting Configuration
WEB_RATE_LIMITING_ENABLED=false
WEB_RATE_LIMITING_REQUESTS_PER_MINUTE=100

# Circuit Breaker Configuration
WEB_CIRCUIT_BREAKER_ENABLED=true

# Resource Monitoring Configuration
WEB_RESOURCE_MONITORING_ENABLED=true
WEB_POOL_USAGE_WARNING_THRESHOLD=0.75
WEB_POOL_USAGE_CRITICAL_THRESHOLD=0.90
EOF

# Set appropriate permissions
chmod 600 "$CERTS_DIR/server.key"
chmod 644 "$CERTS_DIR/server.crt"
chmod 600 "$KEYS_DIR/jwt_private.pem"
chmod 644 "$KEYS_DIR/jwt_public.pem"
chmod 600 "$KEYS_DIR/jwt_keys.env"
chmod 600 "$PROJECT_ROOT/.env.web_test"

echo "✅ Certificate and key generation complete!"
echo ""
echo "📁 Generated files:"
echo "   TLS Certificate: $CERTS_DIR/server.crt"
echo "   TLS Private Key: $CERTS_DIR/server.key"
echo "   JWT Private Key: $KEYS_DIR/jwt_private.pem"
echo "   JWT Public Key:  $KEYS_DIR/jwt_public.pem"
echo "   Environment Keys: $KEYS_DIR/jwt_keys.env"
echo "   Test Environment: $PROJECT_ROOT/.env.web_test"
echo ""
echo "🔧 To use these certificates in tests:"
echo "   source .env.web_test"
echo "   cargo test --test web_integration_tests"
echo ""
echo "🛡️  Security Note: These are test-only certificates and keys."
echo "   Do NOT use in production environments!"
EOF
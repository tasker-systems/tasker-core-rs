# Extend the official PGMQ PostgreSQL 17 image with UUID v7 support
# This provides a complete test/CI environment with both PGMQ and UUID v7 extensions

FROM ghcr.io/pgmq/pg17-pgmq:v1.5.1 AS base-with-pgmq

# Build stage for pg_uuidv7 extension
FROM base-with-pgmq AS build-stage

# Switch to root user for package installation
USER root

# Install build dependencies
RUN apt-get update && apt-get install -y \
        build-essential \
        git \
        postgresql-server-dev-17 \
    && rm -rf /var/lib/apt/lists/*

# Build pg_uuidv7 extension
WORKDIR /build
RUN git clone https://github.com/fboulnois/pg_uuidv7.git \
    && cd pg_uuidv7 \
    && make install

# Final stage - start from PGMQ base and add UUID v7
FROM base-with-pgmq

# Switch to root to copy extensions
USER root

# Copy UUID v7 extension from build stage
COPY --from=build-stage /usr/lib/postgresql/17/lib/pg_uuidv7.so /usr/lib/postgresql/17/lib/
COPY --from=build-stage /usr/share/postgresql/17/extension/pg_uuidv7* /usr/share/postgresql/17/extension/

# Create initialization script for UUID v7 extension (PGMQ already included in base)
RUN echo "CREATE EXTENSION IF NOT EXISTS pg_uuidv7 CASCADE;" > /docker-entrypoint-initdb.d/02-pg_uuidv7.sql

# Test script to verify both extensions work
RUN echo "SELECT uuid_generate_v7() as test_uuid_v7, 'PGMQ and UUID v7 ready!' as status;" > /docker-entrypoint-initdb.d/99-test-extensions.sql

# Switch back to postgres user for runtime
USER postgres

# Labels for identification
LABEL description="PostgreSQL 17 with PGMQ and UUID v7 extensions"
LABEL maintainer="tasker-systems"
LABEL base-image="ghcr.io/pgmq/pg17-pgmq:v1.5.1"
LABEL extensions="pgmq,pg_uuidv7"

# Default environment variables for Tasker development
ENV POSTGRES_DB=tasker_test
ENV POSTGRES_USER=tasker
ENV POSTGRES_PASSWORD=tasker
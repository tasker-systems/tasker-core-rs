# Linear Workflow Task Configuration
# Implements A -> B -> C -> D pattern with mathematical operations

name: mathematical_sequence
task_handler_class: LinearWorkflow::LinearWorkflowHandler
namespace_name: linear_workflow
version: "1.0.0"
description: "Sequential mathematical operations: input -> square -> add -> multiply -> divide"
default_dependent_system: "default"

# Sequential step definitions
named_steps:
  - linear_step_1 # Square the input
  - linear_step_2 # Add constant
  - linear_step_3 # Multiply by factor
  - linear_step_4 # Divide by divisor (final result)

step_templates:
  - name: linear_step_1
    description: "Square the even number"
    handler_class: LinearWorkflow::StepHandlers::LinearStep1Handler
    default_retryable: true
    default_retry_limit: 3
    timeout_seconds: 30
    handler_config:
      operation: "square"
      description: "Square the input number (n²)"

  - name: linear_step_2
    description: "Add constant to result"
    handler_class: LinearWorkflow::StepHandlers::LinearStep2Handler
    depends_on_step: linear_step_1
    default_retryable: true
    default_retry_limit: 3
    timeout_seconds: 30
    handler_config:
      operation: "add"
      constant: 10
      description: "Add 10 to the squared result"

  - name: linear_step_3
    description: "Multiply by factor"
    handler_class: LinearWorkflow::StepHandlers::LinearStep3Handler
    depends_on_step: linear_step_2
    default_retryable: true
    default_retry_limit: 3
    timeout_seconds: 30
    handler_config:
      operation: "multiply"
      factor: 3
      description: "Multiply by 3"

  - name: linear_step_4
    description: "Divide by divisor for final result"
    handler_class: LinearWorkflow::StepHandlers::LinearStep4Handler
    depends_on_step: linear_step_3
    default_retryable: true
    default_retry_limit: 3
    timeout_seconds: 30
    handler_config:
      operation: "divide"
      divisor: 2
      description: "Divide by 2 for final result"

# Environment-specific overrides
environments:
  test:
    step_templates:
      - name: linear_step_1
        handler_config:
          timeout_seconds: 10
      - name: linear_step_2
        handler_config:
          timeout_seconds: 10
      - name: linear_step_3
        handler_config:
          timeout_seconds: 10
      - name: linear_step_4
        handler_config:
          timeout_seconds: 10

# Custom validation rules
handler_config:
  input_validation:
    required_fields: ["even_number"]
    even_number_constraint: "must_be_even"
    value_range:
      min: 2
      max: 100

  expected_results:
    step_1: "input²"
    step_2: "(input² + 10)"
    step_3: "(input² + 10) × 3"
    step_4: "((input² + 10) × 3) ÷ 2"

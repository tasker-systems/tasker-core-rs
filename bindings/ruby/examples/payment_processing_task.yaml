# payment_processing_task.yaml
# 
# Task configuration file for the payment processing workflow
# This demonstrates how task templates work with the composition system
#

name: payment_processing_workflow
version: "1.0.0"
description: "Complete payment processing workflow with notifications"
namespace: payment_processing

# Task-level configuration
task_config:
  timeout_seconds: 300
  retry_limit: 3
  retryable: true
  priority: high
  tags:
    - payment
    - customer_workflow
    - financial

# Step templates define the workflow structure
step_templates:
  - name: payment_processing
    description: "Process customer payment"
    handler_class: PaymentProcessingStepHandler
    depends_on_steps: []
    default_retryable: true
    default_retry_limit: 3
    timeout_seconds: 30
    retry_backoff:
      initial_delay: 5
      max_delay: 300
      multiplier: 2.0
      jitter: true
    handler_config:
      max_amount: 10000
      supported_currencies: ["USD", "EUR", "GBP"]
      supported_payment_methods: ["credit_card", "debit_card", "paypal"]
      processor: "example_payment_gateway"
      validation_rules:
        - amount_positive: true
        - currency_supported: true
        - payment_method_valid: true

  - name: payment_notification
    description: "Send payment confirmation notification"
    handler_class: NotificationStepHandler
    depends_on_steps: ["payment_processing"]
    default_retryable: true
    default_retry_limit: 5
    timeout_seconds: 15
    retry_backoff:
      initial_delay: 10
      max_delay: 600
      multiplier: 1.5
      jitter: true
    handler_config:
      supported_types: ["email", "sms", "push"]
      default_template: "payment_confirmation"
      retry_on_failure: true
      providers:
        email: "example_email_service"
        sms: "example_sms_service"
        push: "example_push_service"

  - name: audit_log
    description: "Log payment transaction for audit"
    handler_class: AuditLogStepHandler
    depends_on_steps: ["payment_processing"]
    default_retryable: true
    default_retry_limit: 10
    timeout_seconds: 10
    retry_backoff:
      initial_delay: 1
      max_delay: 60
      multiplier: 1.2
      jitter: false
    handler_config:
      log_level: "info"
      include_sensitive_data: false
      retention_days: 2555  # 7 years
      compliance_standard: "PCI_DSS"

# Workflow execution configuration
workflow_config:
  execution_mode: "parallel"  # or "sequential"
  failure_strategy: "stop_on_first_failure"  # or "continue_on_failure"
  max_concurrent_steps: 3
  step_timeout_buffer: 5  # seconds added to each step timeout
  
# Environment-specific overrides
environments:
  development:
    task_config:
      timeout_seconds: 60
      retry_limit: 1
    step_templates:
      payment_processing:
        handler_config:
          max_amount: 100
          
  staging:
    task_config:
      timeout_seconds: 180
      retry_limit: 2
    step_templates:
      payment_processing:
        handler_config:
          max_amount: 1000
          
  production:
    task_config:
      timeout_seconds: 300
      retry_limit: 5
    step_templates:
      payment_processing:
        handler_config:
          max_amount: 50000
          
# Event configuration for monitoring
events:
  publish_step_started: true
  publish_step_completed: true
  publish_step_failed: true
  publish_step_retried: true
  publish_task_started: true
  publish_task_completed: true
  publish_task_failed: true
  
  # Custom events for this workflow
  custom_events:
    - name: payment_amount_exceeds_limit
      description: "Triggered when payment amount exceeds configured limit"
      payload_schema:
        amount: "number"
        limit: "number"
        customer_id: "string"
        
    - name: notification_delivery_failed
      description: "Triggered when notification delivery fails"
      payload_schema:
        recipient: "string"
        message_type: "string"
        error_message: "string"
        retry_count: "number"
        
    - name: audit_log_created
      description: "Triggered when audit log entry is created"
      payload_schema:
        transaction_id: "string"
        log_level: "string"
        compliance_standard: "string"

# Monitoring and alerting configuration
monitoring:
  metrics:
    - name: payment_processing_duration
      type: histogram
      description: "Time taken to process payments"
      buckets: [0.1, 0.5, 1.0, 5.0, 10.0, 30.0]
      
    - name: payment_success_rate
      type: gauge
      description: "Percentage of successful payments"
      
    - name: notification_delivery_rate
      type: gauge
      description: "Percentage of successfully delivered notifications"
      
  alerts:
    - name: high_payment_failure_rate
      condition: "payment_success_rate < 0.95"
      severity: "warning"
      description: "Payment success rate has dropped below 95%"
      
    - name: payment_processing_timeout
      condition: "payment_processing_duration > 25"
      severity: "critical"
      description: "Payment processing is taking longer than 25 seconds"
      
    - name: notification_delivery_failure
      condition: "notification_delivery_rate < 0.90"
      severity: "warning"
      description: "Notification delivery rate has dropped below 90%"
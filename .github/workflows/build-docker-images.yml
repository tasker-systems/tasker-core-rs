name: Build Docker Images

on:
  workflow_call:
    outputs:
      postgres-image:
        description: "PostgreSQL with PGMQ image tag"
        value: ${{ jobs.build-postgres.outputs.image }}

env:
  POSTGRES_IMAGE: ghcr.io/${{ github.repository_owner }}/tasker-pgmq:${{ github.sha }}

jobs:
  build-postgres:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.image.outputs.image }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3

      - name: Setup shared environment variables
        uses: ./.github/actions/setup-env

      - name: Log in to GitHub Container Registry
        id: ghcr-login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Build and push PostgreSQL image
        id: docker-build
        if: steps.ghcr-login.outcome == 'success'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/db/Dockerfile
          push: true
          tags: |
            ${{ env.POSTGRES_IMAGE }}
            ghcr.io/${{ github.repository_owner }}/tasker-pgmq:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image strategy
        id: image
        run: |
          if [[ "${{ steps.docker-build.outcome }}" == "success" ]]; then
            echo "image=${{ env.POSTGRES_IMAGE }}" >> $GITHUB_OUTPUT
          else
            echo "image=ghcr.io/pgmq/pg17-pgmq:v1.5.1" >> $GITHUB_OUTPUT
            echo "::warning::Using fallback PGMQ image without pg_uuidv7 extension"
          fi

name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-postgres:
    uses: ./.github/workflows/build-postgres.yml

  # Code quality checks run in parallel with comprehensive tests
  code-quality:
    needs: build-postgres
    uses: ./.github/workflows/code-quality.yml
    with:
      postgres-image: ${{ needs.build-postgres.outputs.postgres-image }}

  # Integration tests with dual-mode execution:
  # - Native binaries by default (fast, ~7 min)
  # - Docker with "run-docker" label (production-like, ~15 min)
  integration-tests:
    needs: build-postgres
    uses: ./.github/workflows/test-integration.yml
    with:
      postgres-image: ${{ needs.build-postgres.outputs.postgres-image }}

  # Ruby framework tests run after integration tests (workers are shut down)
  ruby-framework-tests:
    needs: [build-postgres, integration-tests]
    uses: ./.github/workflows/test-ruby-framework.yml
    with:
      postgres-image: ${{ needs.build-postgres.outputs.postgres-image }}

  performance-analysis:
    needs: [integration-tests, ruby-framework-tests]
    runs-on: ubuntu-22.04
    if: always()
    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v6
        with:
          pattern: "*-test-results*"
          merge-multiple: true
          path: performance-data/
        continue-on-error: true

      - name: Aggregate performance metrics
        run: |
          echo "ðŸ“Š Aggregating test performance metrics..."

          # Create performance dashboard
          cat > performance-summary.md << 'EOF'
          # Test Performance Summary

          ## Overview
          This report summarizes performance metrics from comprehensive and Ruby framework tests.

          EOF

          # Process comprehensive test performance
          if [ -f "performance-data/unit-test-results/junit.xml" ] || [ -f "performance-data/integration-test-results/junit.xml" ]; then
            echo "## Comprehensive Test Performance" >> performance-summary.md
            echo "Comprehensive tests (unit + integration + E2E) completed successfully." >> performance-summary.md
            echo "" >> performance-summary.md
          fi

          # Process Ruby framework test performance
          if [ -f "performance-data/ruby-framework-perf-summary.txt" ]; then
            echo "## Ruby Framework Test Performance" >> performance-summary.md
            echo '```' >> performance-summary.md
            cat performance-data/ruby-framework-perf-summary.txt >> performance-summary.md
            echo '```' >> performance-summary.md
            echo "" >> performance-summary.md
          fi

          echo "âœ… Performance summary created"

      - name: Upload performance analysis
        uses: actions/upload-artifact@v5
        with:
          name: performance-analysis
          path: |
            performance-summary.md
            performance-data/

  ci-success:
    needs: [code-quality, integration-tests, ruby-framework-tests, performance-analysis]
    uses: ./.github/workflows/ci-success.yml

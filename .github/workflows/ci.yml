# Comprehensive CI/CD Pipeline for Tasker Core Rust
# Optimized with Docker image caching via GitHub Container Registry
name: "Tasker Core Rust CI"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Define the image tag for this workflow run
  POSTGRES_IMAGE: ghcr.io/${{ github.repository_owner }}/tasker-postgres:${{ github.sha }}

jobs:
  # Build and push the PostgreSQL image once
  build-postgres-image:
    name: Build PostgreSQL Image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    outputs:
      image: ${{ steps.image.outputs.image }}
      use_ghcr: ${{ steps.image.outputs.use_ghcr }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        id: ghcr-login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Build and push PostgreSQL image to GHCR
        id: docker-build
        if: steps.ghcr-login.outcome == 'success'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.postgres-extensions
          push: true
          tags: |
            ${{ env.POSTGRES_IMAGE }}
            ghcr.io/${{ github.repository_owner }}/tasker-postgres:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image strategy
        id: image
        run: |
          if [[ "${{ steps.docker-build.outcome }}" == "success" ]]; then
            echo "image=${{ env.POSTGRES_IMAGE }}" >> $GITHUB_OUTPUT
            echo "use_ghcr=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Successfully pushed to GHCR: ${{ env.POSTGRES_IMAGE }}"
          else
            echo "image=ghcr.io/pgmq/pg17-pgmq:v1.5.1" >> $GITHUB_OUTPUT
            echo "use_ghcr=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è GHCR not available, falling back to base PGMQ image (UUID v7 features disabled)"
            echo "::warning::Using fallback PGMQ image without pg_uuidv7 extension. Some tests may fail."
          fi

  # Code Quality and Linting
  quality:
    name: Code Quality
    runs-on: ubuntu-22.04
    needs: build-postgres-image

    services:
      postgres:
        image: ${{ needs.build-postgres-image.outputs.image }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker_core_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: tasker_core_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
      TASKER_ENV: test
      LOG_LEVEL: warn
      JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
      JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
      API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PostgreSQL image availability
        if: needs.build-postgres-image.outputs.use_ghcr == 'false'
        run: |
          echo "::warning::Using fallback PGMQ image without pg_uuidv7 extension"
          echo "::warning::UUID v7 migration tests may fail in this run"
          echo "::notice::To fix: Enable GitHub Packages for this repository or check GHCR permissions"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: quality

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Set up database
        run: |
          echo "üóÑÔ∏è Running database migrations..."
          sqlx migrate run

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy lints
        env:
          DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check documentation
        env:
          DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
          TASKER_ENV: test
          LOG_LEVEL: warn
          RUST_LOG: warn
          JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
          JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
          API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"
        run: cargo doc --no-deps --document-private-items

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

  # Build and test on Ubuntu (production target)
  test:
    name: Test (Rust ${{ matrix.rust-version }})
    runs-on: ubuntu-22.04
    needs: build-postgres-image

    strategy:
      fail-fast: false
      matrix:
        rust-version: ["stable", "beta"]

    services:
      postgres:
        image: ${{ needs.build-postgres-image.outputs.image }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker_core_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: tasker_core_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
      TASKER_ENV: test
      LOG_LEVEL: warn
      RUST_LOG: warn
      JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
      JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
      API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ matrix.rust-version }}

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Set up database
        run: |
          # Wait for PostgreSQL to be ready
          until pg_isready -h localhost -p 5432 -U tasker_core_test; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Run database migrations
        run: sqlx migrate run

      - name: Build project
        env:
          DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
          TASKER_ENV: test
          LOG_LEVEL: warn
          RUST_LOG: warn
          JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
          JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
          API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"
        run: cargo build --verbose --all-features

      - name: Run lib tests
        env:
          DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
          TASKER_ENV: test
          LOG_LEVEL: warn
          RUST_LOG: warn
          JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
          JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
          API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"
        run: cargo test --lib --verbose --all-features

      - name: Run integration tests
        env:
          DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
          TASKER_ENV: test
          LOG_LEVEL: warn
          RUST_LOG: warn
          JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
          JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
          API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"
        run: cargo test --test '*' --verbose --all-features

      - name: Run doctests
        run: cargo test --doc --verbose

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.rust-version }}
          path: target/debug/deps/

  # Performance benchmarks
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-22.04
    needs: build-postgres-image
    if: github.event_name == 'pull_request'

    services:
      postgres:
        image: ${{ needs.build-postgres-image.outputs.image }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker_core_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: tasker_core_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
      TASKER_ENV: test
      LOG_LEVEL: warn
      RUST_LOG: warn
      JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
      JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
      API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: benchmark

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Set up database
        run: |
          until pg_isready -h localhost -p 5432 -U tasker_core_test; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          sqlx migrate run

      - name: Run benchmarks
        run: cargo bench --verbose

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: target/criterion/

  # Example validation (similar to Rails template validation)
  validate-examples:
    name: Validate Examples and Demos
    runs-on: ubuntu-22.04
    needs: build-postgres-image

    services:
      postgres:
        image: ${{ needs.build-postgres-image.outputs.image }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker_core_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: tasker_core_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
      TASKER_ENV: test
      LOG_LEVEL: warn
      RUST_LOG: warn
      JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
      JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
      API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: examples

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Set up database
        run: |
          until pg_isready -h localhost -p 5432 -U tasker_core_test; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          sqlx migrate run

      - name: Validate SQL Functions Demo
        run: |
          echo "üóÑÔ∏è Running SQL functions demonstration..."
          cargo run --example sql_functions_demo

      - name: Validate Configuration Demo
        run: |
          echo "üìã Running configuration demonstration..."
          cargo run --example config_demo

      - name: Validate Error Classification Demo
        run: |
          echo "‚ö†Ô∏è Running error classification demonstration..."
          cargo run --example error_classification_demo

      - name: Validate Unified Logging Demo
        run: |
          echo "üìù Running unified logging demonstration..."
          cargo run --example unified_logging_demo

      - name: Build all examples
        run: |
          echo "üèóÔ∏è Building all examples..."
          cargo build --examples --verbose

  # Coverage reporting
  coverage:
    name: Code Coverage
    runs-on: ubuntu-22.04
    needs: build-postgres-image

    services:
      postgres:
        image: ${{ needs.build-postgres-image.outputs.image }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker_core_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: tasker_core_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Cinstrument-coverage
      LLVM_PROFILE_FILE: cargo-test-%p-%m.profraw
      TASKER_ENV: test
      LOG_LEVEL: warn
      RUST_LOG: warn
      JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
      JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
      API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: coverage

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Set up database
        run: |
          until pg_isready -h localhost -p 5432 -U tasker_core_test; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          sqlx migrate run

      - name: Generate coverage report
        env:
          DATABASE_URL: postgres://tasker_core_test:test_password@localhost:5432/tasker_core_test
          TASKER_ENV: test
          LOG_LEVEL: warn
          RUST_LOG: warn
          JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
          JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
          API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          fail_ci_if_error: false

  # Ruby bindings test
  ruby-bindings:
    name: Ruby Bindings Test
    runs-on: ubuntu-22.04
    needs: build-postgres-image

    services:
      postgres:
        image: ${{ needs.build-postgres-image.outputs.image }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: tasker
          POSTGRES_PASSWORD: tasker
          POSTGRES_DB: tasker_rust_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://tasker:tasker@localhost:5432/tasker_rust_test
      TASKER_ENV: test
      RAILS_ENV: test
      LOG_LEVEL: warn
      RUST_LOG: warn
      TASKER_PROJECT_ROOT: ${{ github.workspace }}
      WORKSPACE_PATH: ${{ github.workspace }}
      JWT_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQABAoIBADuK3qKGPX8JyXVvzUtXm85uMohsxP9xXiMVaQAY9nnwMZ3+6SlycHNxS4ACTibE/GJB9ktVDQ23p1C/NfNQ+0bBk7h+ejo3R+KV4H+rszMbDu8W6WO5UN7DRCSxr5UvxZ680XUFmIzyo4o7E69YXy7LCYgxZ1/lT2xsLlMAFq6tC9/nRx10ZfP5cYBN0gbBNav7fzcEwGvvcfwsxpoVeLR7fjicNjSQ1m6Lovn48rCiTC2xA3OkJBvKbp4rmO9zczxHBYWZBjDI8/Wus/MF3WmzFdNMo07a2xytszjLDvwr/P/ZVhq82Nhcr8xKRlCaGOIPGBcyBKNnGTmr1mL2KTkCgYEA96gRUPBLV9clR3acm0ViNDpGX7L6CIg6tnTI99fmdt+e6+zlfnO46uRVXREpHR+DCV1CC2vjai10zZzjSRCHBdP0GWcf97G9/wsW32hCuN4xE9PMBf1Ttm/oAU80gN7tDsutcsdYRCdIrSWuHlppByTlRWWwg9lCoHq4KYXtIGcCgYEAyqMqnQUzYqUzpZiypS0iKjrEP0pCUEOQ69eOsqLq7LnBYN7ugtuEN6GmL52fxam1G2y0Yzxy406Sf1hONnZXUhfUwVXHBS9eF5jtackPnvSeVyEQX9AdHlmOHNmypuRbzaPMkp2LjJlgUf+mNDtG1zfmsennkEZG9+maHkoqR7sCgYBOqjr926YC+9rijUGHbI2aC1ypLz+OkD8eD5B6cUDKR5PCWtg2x2lYazjWPAo0Lvs/cTj2ScnNwyyT1x626aIJ7t5dZ01XL0Uriwkz43k2IZWzN5ZZ3LLHg1pNeCw0NxtTlMy+ZaWa2GOUZCCfkZZE56pP1dIwv0UTloeC4QCGRwKBgQCGaEAFssNotQdS2bv1D8DPnfc5u7nMn2Rq6qm+F44XwwZfiL9PkOdcNx6SCs1FQNHeBPaJtDjISP+m9B28xjYZP7FhI9JEwCx7Hnarai+wUbUNOeMwikwmK2S2AjgbtvClr/YrcdB0S++1tAq8Lm1Ip82fSPTNn6/HFO2jFbKBrQKBgFDfovReI7rcF1iw90u6inVE+hCXlAfCbD96r3kM/xMJ0t4Udztxj5q0VMAGThAmTYrnD4r7Lst+5YRvTY8DXcKbSYKgJ7R8JyR8ujr+x6r1kxZs+fgcrI0EfygqICvOwkUlBuCwmDdDHcDxp4RgXkob2u3fj6kfpcd/nsV6EjVk-----END RSA PRIVATE KEY-----"
      JWT_PUBLIC_KEY: "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxAh25l4WV5ibwXaIAETRchkQhVP/OymplWglG+GHM1j2fFdwsBR/jGGfdebsmDSC26/CB4CIQOCOf7YCjZsAbxLioK5R2lAE3AoE9VQRKouwzqpUcylXUswbXdPd1AJMrjaVDOzo27KI8v4/+SiyfgJsBJCLu4owiClKqD7iLHL2sxWKlTcqUy+puCH8u0wfdNM1O0YqQAbD6RhnDPcHY58/f/UD+AHIrCConFDuo1HFrEU0TieJ9BMpx4QM+r7/niLzvx8OfuV3g4OZfWA86fCQ38ACdj/BXJhnCIy3w6GqJiaU+BO6ZBWrYqy1FM4O7O+xvVizQDmwRVDQrxk8PQIDAQAB-----END PUBLIC KEY-----"
      API_KEY: "ff3083e54e01ad76ffc3f791359c1ed92b347bcd613af94f88f0bf4991eaa168"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ruby-bindings
          workspaces: |
            . -> target
            bindings/ruby -> target

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true
          working-directory: bindings/ruby

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql-client

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features rustls,postgres

      - name: Set up database
        run: |
          until pg_isready -h localhost -p 5432 -U tasker; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          sqlx migrate run

      - name: Build Ruby extension
        run: |
          cd bindings/ruby
          bundle exec rake compile

      - name: Run Ruby tests
        run: |
          cd bindings/ruby
          bundle exec rspec spec/ --format documentation

  # Final status check
  ci-success:
    name: CI Success
    runs-on: ubuntu-22.04
    needs: [quality, security, test, validate-examples, ruby-bindings]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          echo "Quality: ${{ needs.quality.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Validate Examples: ${{ needs.validate-examples.result }}"
          echo "Ruby Bindings: ${{ needs.ruby-bindings.result }}"

          if [[ "${{ needs.quality.result }}" != "success" ||
                "${{ needs.security.result }}" != "success" ||
                "${{ needs.test.result }}" != "success" ||
                "${{ needs.validate-examples.result }}" != "success" ||
                "${{ needs.ruby-bindings.result }}" != "success" ]]; then
            echo "‚ùå One or more required jobs failed"
            exit 1
          else
            echo "‚úÖ All required jobs passed"
          fi

# Override environment for production
environment = "production"

[database]
url = "${DATABASE_URL:-postgresql://tasker:tasker@localhost:5432/tasker_production}"


[database.pool]
# Larger pool for production
max_connections = 50
min_connections = 15
acquire_timeout_seconds = 30
idle_timeout_seconds = 600


[queues]
default_batch_size = 50

# Larger channel buffers for production (TAS-51)

[shared_channels.event_publisher]
event_queue_buffer_size = 10000


[shared_channels.ffi]
ruby_event_buffer_size = 2000

# Production circuit breaker settings - higher capacity, more resilient

[circuit_breakers.global_settings]
max_circuit_breakers = 100
metrics_collection_interval_seconds = 60


[circuit_breakers.default_config]
failure_threshold = 10  # More tolerant in production
timeout_seconds = 60  # Longer recovery timeout
success_threshold = 3  # Multiple successes before closing

# Production telemetry settings
[telemetry]
enabled = true

[telemetry.metrics]
enabled = true
export_endpoint = "${TELEMETRY_ENDPOINT:-http://prometheus:9090}"

[telemetry.tracing]
enabled = true
sampling_rate = 0.1  # Sample 10% of traces in production
export_endpoint = "${TRACING_ENDPOINT:-http://jaeger:14268}"

# Production system settings
[system]
max_memory_mb = 4096  # Higher limits for production
max_cpu_percent = 90.0  # Allow more CPU usage in production

# Production execution settings
[execution]
environment = "production"

[execution.timeouts]
default_operation_timeout_seconds = 60
shutdown_grace_period_seconds = 60  # Longer grace period for clean shutdown

# Production decision points settings
[decision_points]
max_steps_per_decision = 100  # Higher limit for complex workflows
max_decision_depth = 15  # Deeper nesting for complex multi-stage approvals
warn_threshold_steps = 30  # Higher threshold to reduce noise
warn_threshold_depth = 7
enable_detailed_logging = false  # Disable detailed logging to reduce volume
enable_metrics = true  # Always enable metrics in production

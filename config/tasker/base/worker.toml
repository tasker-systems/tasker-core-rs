# TAS-40 Worker Configuration Component (Command Pattern Architecture)
# Controls worker system behavior using event-driven step processing
# Replaces polling-based executor pools with command pattern

[worker]
# Worker system identification
worker_id = "worker-001"
worker_type = "general"

# Namespaces this worker will process
namespaces = ["fulfillment", "inventory", "notifications"]

# Step processing configuration (command pattern)
[worker.step_processing]
claim_timeout_seconds = 300
max_retries = 3
retry_backoff_multiplier = 2.0
heartbeat_interval_seconds = 30
max_concurrent_steps = 100

# Event system configuration for command pattern
[worker.event_system]

# Event publisher for sending results back to orchestration
[worker.event_system.publisher]
endpoint = "tcp://localhost:5555"
batch_size = 10
timeout_ms = 5000
max_retries = 3

# Event subscriber for receiving step execution requests
[worker.event_system.subscriber]
endpoint = "tcp://localhost:5556"
queue_names = ["fulfillment_queue", "inventory_queue", "notifications_queue"]
prefetch_count = 10
ack_timeout_seconds = 30

# Event processing configuration
[worker.event_system.processing]
processor_threads = 4
processing_timeout_ms = 30000
deduplication_enabled = true
deduplication_cache_size = 1000

# Worker health monitoring
[worker.health_monitoring]
health_check_interval_seconds = 10
metrics_collection_enabled = true
performance_monitoring_enabled = true
step_processing_rate_threshold = 10.0
error_rate_threshold = 0.05
memory_usage_threshold_mb = 1024

# Worker resource limits
[worker.resource_limits]
max_memory_mb = 2048
max_cpu_percent = 80
max_database_connections = 50
max_queue_connections = 20

# Queue configuration for message consumption
[worker.queue_config]
visibility_timeout_seconds = 30
batch_size = 10
polling_interval_ms = 100
# Tasker Configuration - orchestration Context
# Environment: production
# Generated: 2025-10-17T20:32:43.205139+00:00
# Source: config/tasker
#
# This file is a MERGED configuration (base + environment overrides).
# DO NOT EDIT manually - regenerate using: tasker-cli config generate
#
# Environment Variable Overrides (applied at runtime):
# - DATABASE_URL: Override database.url (K8s secrets rotation)
# - TASKER_TEMPLATE_PATH: Override worker.template_path (testing)
#

environment = "production"

[backoff]
backoff_multiplier = 2.0
default_backoff_seconds = [
    1,
    2,
    4,
    8,
    16,
    32,
]
jitter_enabled = true
jitter_max_percentage = 0.1
max_backoff_seconds = 300

[backoff.reenqueue_delays]
blocked_by_failures = 60
enqueuing_steps = 0
evaluating_results = 5
initializing = 5
steps_in_process = 10
waiting_for_dependencies = 45
waiting_for_retry = 30

[circuit_breakers]
enabled = true

[circuit_breakers.component_configs.pgmq]
failure_threshold = 3
success_threshold = 2
timeout_seconds = 15

[circuit_breakers.component_configs.task_readiness]
failure_threshold = 5
success_threshold = 2
timeout_seconds = 30

[circuit_breakers.default_config]
failure_threshold = 10
success_threshold = 3
timeout_seconds = 60

[circuit_breakers.global_settings]
auto_create_enabled = true
max_circuit_breakers = 100
metrics_collection_interval_seconds = 60
min_state_transition_interval_seconds = 1

[database]
adapter = "postgresql"
checkout_timeout = 10
enable_secondary_database = false
encoding = "unicode"
host = "localhost"
password = "tasker"
reaping_frequency = 10
skip_migration_check = false
url = "postgresql://tasker:tasker@localhost:5432/tasker_development"
username = "tasker"

[database.pool]
acquire_timeout_seconds = 30
idle_timeout_seconds = 600
max_connections = 50
max_lifetime_seconds = 7200
min_connections = 15

[database.variables]
statement_timeout = 5000

[mpsc_channels.command_processor]
command_buffer_size = 5000

[mpsc_channels.event_listeners]
pgmq_event_buffer_size = 50000

[mpsc_channels.event_systems]
event_channel_buffer_size = 5000

[orchestration_events]
deployment_mode = "Hybrid"
system_id = "orchestration-event-system"

[orchestration_events.health]
enabled = true
error_rate_threshold_per_minute = 5
max_consecutive_errors = 10
performance_monitoring_enabled = true

[orchestration_events.processing]
batch_size = 10
max_concurrent_operations = 10
max_retries = 3

[orchestration_events.processing.backoff]
initial_delay_ms = 100
jitter_percent = 0.1
max_delay_ms = 5000
multiplier = 2.0

[orchestration_events.timing]
claim_timeout_seconds = 300
fallback_polling_interval_seconds = 5
health_check_interval_seconds = 30
processing_timeout_seconds = 30
visibility_timeout_seconds = 30

[orchestration_system]
enable_performance_logging = true
mode = "standalone"
use_unified_state_machine = true

[orchestration_system.web]
bind_address = "0.0.0.0:8080"
enabled = true
max_request_size_mb = 16
request_timeout_ms = 60000

[orchestration_system.web.auth]
api_key = ""
api_key_header = "X-API-Key"
enabled = false
jwt_audience = "tasker-api"
jwt_issuer = "tasker-core"
jwt_private_key = ""
jwt_public_key = ""
jwt_token_expiry_hours = 24

[orchestration_system.web.auth.protected_routes."DELETE /v1/tasks/{task_uuid}"]
auth_type = "bearer"
required = true

[orchestration_system.web.auth.protected_routes."GET /v1/analytics/bottlenecks"]
auth_type = "bearer"
required = false

[orchestration_system.web.auth.protected_routes."GET /v1/analytics/performance"]
auth_type = "bearer"
required = false

[orchestration_system.web.auth.protected_routes."PATCH /v1/tasks/{task_uuid}/workflow_steps/{step_uuid}"]
auth_type = "bearer"
required = true

[orchestration_system.web.auth.protected_routes."POST /v1/tasks"]
auth_type = "bearer"
required = false

[orchestration_system.web.cors]
allowed_headers = ["*"]
allowed_methods = [
    "GET",
    "POST",
    "PUT",
    "DELETE",
    "PATCH",
    "OPTIONS",
]
allowed_origins = ["*"]
enabled = true
max_age_seconds = 86400

[orchestration_system.web.database_pools]
max_total_connections_hint = 80
web_api_connection_timeout_seconds = 30
web_api_idle_timeout_seconds = 600
web_api_max_connections = 30
web_api_pool_size = 20

[orchestration_system.web.rate_limiting]
burst_size = 100
enabled = false
per_client_limit = true
requests_per_minute = 1000

[orchestration_system.web.resilience]
circuit_breaker_enabled = true
max_concurrent_requests = 100
request_timeout_seconds = 30

[orchestration_system.web.resource_monitoring]
pool_usage_critical_threshold = 0.9
pool_usage_warning_threshold = 0.75
report_pool_usage_to_health_monitor = true

[orchestration_system.web.tls]
cert_path = ""
enabled = false
key_path = ""

[queues]
backend = "pgmq"
default_batch_size = 50
default_namespace = "default"
default_visibility_timeout_seconds = 30
health_check_interval = 60
max_batch_size = 200
naming_pattern = "{namespace}_{name}_queue"
orchestration_namespace = "orchestration"
worker_namespace = "worker"

[queues.orchestration_queues]
step_results = "orchestration_step_results_queue"
task_finalizations = "orchestration_task_finalizations_queue"
task_requests = "orchestration_task_requests_queue"

[queues.pgmq]
max_retries = 3
poll_interval_ms = 250
shutdown_timeout_seconds = 5

[queues.rabbitmq]
channel_pool_size = 10
connection_timeout_seconds = 10
heartbeat_interval_seconds = 60

[shared_channels.event_publisher]
event_queue_buffer_size = 10000

[shared_channels.ffi]
ruby_event_buffer_size = 2000

[task_readiness_events]
deployment_mode = "Hybrid"
system_id = "task-readiness-event-system"

[task_readiness_events.health]
enabled = true
error_rate_threshold_per_minute = 5
max_consecutive_errors = 10
performance_monitoring_enabled = true

# TAS-50: task_readiness_events.metadata.* configuration removed
# Configuration consolidated to task_readiness.rs

[task_readiness_events.processing]
batch_size = 50
max_concurrent_operations = 100
max_retries = 3

[task_readiness_events.processing.backoff]
initial_delay_ms = 100
jitter_percent = 0.1
max_delay_ms = 5000
multiplier = 2.0

[task_readiness_events.timing]
claim_timeout_seconds = 300
fallback_polling_interval_seconds = 5
health_check_interval_seconds = 30
processing_timeout_seconds = 30
visibility_timeout_seconds = 30

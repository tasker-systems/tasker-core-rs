[workspace]
members = [
    ".",
    # Note: bindings/ruby/ext/tasker_core is excluded - it has its own workspace for Ruby extension build
    # "bindings/python",  # Future
    # "bindings/wasm",    # Future
]

[package]
name = "tasker-core-rs"
version = "0.1.0"
edition = "2021"
authors = ["Pete Taylor <pete.jc.taylor@hey.com>"]
description = "High-performance Rust core for workflow orchestration, designed to complement the Rails Tasker engine"
license = "MIT"
repository = "https://github.com/tasker-systems/tasker-core-rs"
keywords = ["workflow", "orchestration", "task", "async", "performance"]
categories = ["concurrency", "database", "web-programming"]
readme = "README.md"

[lib]
name = "tasker_core"
crate-type = ["cdylib", "rlib"]

[dependencies]
# Async runtime and utilities
tokio = { version = "1.46", features = ["full"] }
async-trait = "0.1"
futures = "0.3"

# Database and ORM
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json", "bigdecimal", "macros", "migrate"] }
pgmq = "0.30.1"
rust_decimal = { version = "1.37", features = ["serde-with-str"] }
bigdecimal = { version = "0.4", features = ["serde"] }
uuid = { version = "1.11", features = ["v4", "serde"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# Time and date handling
chrono = { version = "0.4.38", features = ["serde"] }

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Logging and telemetry
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"
structured-logger = "1.0"
opentelemetry = "0.27"
opentelemetry-otlp = "0.27"

# Concurrency and state management
parking_lot = "0.12"
dashmap = "6.1"
crossbeam = "0.8"

# State machine
smlang = "0.7"

# Configuration
config = "0.14"
regex = "1.0"

# Random number generation
fastrand = "2.0"

# FFI support
magnus = { version = "0.7", optional = true }
pyo3 = { version = "0.24", optional = true, features = ["extension-module"] }
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true }

# Development and testing
criterion = { version = "0.5.1", optional = true }
rand = "0.9.1"
zmq = "0.10.0"

[dev-dependencies]
# Testing tools
tokio-test = "0.4"
tempfile = "3.0"
proptest = "1.0"
insta = { version = "1.34", features = ["serde", "json"] }
mockall = "0.13"
factori = "1.1"
dotenvy = "0.15"  # Maintained fork of dotenv
url = "2.0"
serial_test = "3.1"

# Coverage tools (used in CI)
cargo-llvm-cov = "0.6"

[features]
default = ["postgres"]
postgres = ["sqlx/postgres"]
ruby-ffi = ["magnus"]
python-ffi = ["pyo3"]
wasm-ffi = ["wasm-bindgen", "wasm-bindgen-futures", "js-sys", "web-sys"]
benchmarks = ["criterion"]
test-helpers = []

[[bench]]
name = "orchestration_benchmarks"
harness = false
required-features = ["benchmarks"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true

# Coverage profile (matches CI)
[profile.coverage]
inherits = "dev"
debug = true
codegen-units = 1
incremental = false
overflow-checks = false

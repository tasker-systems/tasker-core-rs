[workspace]
members = [
    ".",                             # Current crate temporarily remains during migration
    "tasker-shared",
    "tasker-orchestration",
    "tasker-worker",
    "pgmq-notify",
    "bindings/ruby/ext/tasker_core",
    # "bindings/python",  # Future
    # "bindings/wasm",    # Future
]

[package]
name = "tasker-core-rs"
version = "0.1.0"
edition = "2021"
authors = ["Pete Taylor <pete.jc.taylor@hey.com>"]
description = "High-performance Rust core for workflow orchestration, designed to complement the Rails Tasker engine"
license = "MIT"
repository = "https://github.com/tasker-systems/tasker-core-rs"
keywords = ["workflow", "orchestration", "task", "async", "performance"]
categories = ["concurrency", "database", "web-programming"]
readme = "README.md"

[lib]
path = "src/lib.rs"


[dependencies]
# Dependencies for integration tests
tasker-shared = { path = "tasker-shared" }
tasker-orchestration = { path = "tasker-orchestration" }
tasker-worker = { path = "tasker-worker" }
tokio = { workspace = true }
sqlx = { workspace = true }
uuid = { workspace = true }
serde_json = { workspace = true }

[features]
test-utils = [
    "tasker-shared/test-utils",
    "tasker-orchestration/test-utils",
    "tasker-worker/test-utils",
]

[workspace.dependencies]
# Async runtime and utilities
tokio = { version = "1.46", features = ["full"] }
tokio-util = { version = "0.7", features = ["codec"] }

async-trait = "0.1"
futures = "0.3"

# Database and ORM
sqlx = { version = "0.8", features = [
    "runtime-tokio-rustls",
    "postgres",
    "uuid",
    "chrono",
    "json",
    "bigdecimal",
    "macros",
    "migrate",
] }
pgmq = "0.30.1"
rust_decimal = { version = "1.37", features = ["serde-with-str"] }
bigdecimal = { version = "0.4", features = ["serde"] }
uuid = { version = "1.11", features = ["v4", "v7", "serde"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.8"

# Web framework and HTTP server (TAS-28)
axum = "0.7"
axum-extra = { version = "0.9", features = ["typed-header"] }
tower = { version = "0.4" }
tower-http = { version = "0.5", features = ["cors", "trace", "timeout"] }
jsonwebtoken = { version = "9" }
rsa = { version = "0.9" }
# OpenAPI documentation
utoipa = { version = "4.2", features = ["axum_extras", "chrono", "uuid"] }
utoipa-swagger-ui = { version = "7.1", features = ["axum"] }

# Time and date handling
chrono = { version = "0.4.38", features = ["serde"] }

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# System information
sysinfo = "0.31"

# Logging and telemetry
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"
structured-logger = "1.0"
opentelemetry = "0.27"
opentelemetry-otlp = "0.27"

# Concurrency and state management
parking_lot = "0.12"
# dashmap = "6.1"
crossbeam = "0.8"

# Configuration
config = "0.15"
regex = "1.0"
dotenvy = "0.15" # For loading .env files

# Random number generation
fastrand = "2.0"
rand = "0.9.1"
workspace_tools = { version = "0.2.0", features = ["full"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Testing tools
tokio-test = "0.4"
tempfile = "3.0"
proptest = "1.0"
insta = { version = "1.34", features = ["serde", "json"] }
mockall = "0.13"
factori = "1.1"
url = "2.0"
serial_test = "3.1"
# Coverage tools (used in CI)
cargo-llvm-cov = "0.6"
criterion = { version = "0.5.1" }
# FFI support to be added in bindings and workers
magnus = "0.7"
# pyo3 = { version = "0.25", optional = true, features = ["extension-module"] }
# wasm-bindgen = { version = "0.2", optional = true }
# wasm-bindgen-futures = { version = "0.4", optional = true }
# js-sys = { version = "0.3", optional = true }
# web-sys = { version = "0.3", optional = true }

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true

# Coverage profile (matches CI)
[profile.coverage]
inherits = "dev"
debug = true
codegen-units = 1
incremental = false
overflow-checks = false

[package]
name = "tasker-core"
version = "0.1.0"
edition = "2021"
description = "High-performance Rust core for workflow orchestration"
readme = "README.md"
repository = "https://github.com/tasker-systems/tasker-core"
license = "MIT"
keywords = ["async", "orchestration", "performance", "task", "workflow"]
categories = ["concurrency", "database", "web-programming"]

[workspace]
members = [
  ".",  # Current crate temporarily remains during migration
  "pgmq-notify",
  "tasker-client",
  "tasker-orchestration",
  "tasker-shared",
  "tasker-worker",
  "workers/ruby/ext/tasker_core",
  "workers/rust",
  # "workers/python",  # Future
  # "workers/wasm",    # Future
]

[workspace.dependencies]
anyhow = "1.0"
async-trait = "0.1"
# Web framework and HTTP server (TAS-28)
axum = "0.7"
axum-extra = { version = "0.9", features = ["typed-header"] }
bigdecimal = { version = "0.4", features = ["serde"] }
# Coverage tools (used in CI)
cargo-llvm-cov = "0.6"
# Time and date handling
chrono = { version = "0.4.38", features = ["serde"] }
# CLI tool dependencies
clap = { version = "4.5", features = ["derive"] }
# Configuration
config = "0.15"
criterion = { version = "0.5.1" }
# dashmap = "6.1"
crossbeam = "0.8"
dotenvy = "0.15"  # For loading .env files
factori = "1.1"
# Random number generation
fastrand = "2.0"
futures = "0.3"
insta = { version = "1.34", features = ["json", "serde"] }
# TTY detection for ANSI colors
is-terminal = "0.4"
jsonwebtoken = { version = "9" }
# FFI support to be added in bindings and workers
magnus = "0.7"
mockall = "0.13"
# Utility dependencies
once_cell = "1.19"
opentelemetry = "0.26"
opentelemetry-otlp = { version = "0.26", features = ["grpc-tonic"] }
# rt-tokio: Telemetry tasks run on shared tokio runtime (lower overhead, sufficient for I/O-bound workloads)
# Alternative: rt-tokio-current-thread creates separate runtime (higher isolation, higher resource cost)
# Our choice: rt-tokio works well for async I/O-bound orchestration without CPU-intensive workloads
opentelemetry_sdk = { version = "0.26", features = ["rt-tokio", "trace", "metrics"] }
opentelemetry-semantic-conventions = "0.26"
# Concurrency and state management
parking_lot = "0.12"
pgmq = "0.30.1"
pgmq-notify = { path = "pgmq-notify" }
proptest = "1.0"
rand = "0.9.1"
regex = "1.0"
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
rsa = { version = "0.9" }
rust_decimal = { version = "1.37", features = ["serde-with-str"] }
# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
serial_test = "3.1"
# Database and ORM
sqlx = { version = "0.8", features = [
  "bigdecimal",
  "chrono",
  "json",
  "macros",
  "migrate",
  "postgres",
  "runtime-tokio-rustls",
  "uuid",
] }
# System information
sysinfo = "0.31"
tempfile = "3.0"
# Error handling
thiserror = "2.0"
# Async runtime and utilities
tokio = { version = "1.46", features = ["full"] }
# Testing tools
tokio-test = "0.4"
tokio-util = { version = "0.7", features = ["codec"] }
toml = "0.9"
tower = { version = "0.4" }
tower-http = { version = "0.6", features = ["cors", "timeout", "trace"] }
# Logging and telemetry
tracing = "0.1"
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.27"
url = "2.0"
# OpenAPI documentation
utoipa = { version = "4.2", features = ["axum_extras", "chrono", "uuid"] }
utoipa-swagger-ui = { version = "7.1", features = ["axum"] }
uuid = { version = "1.11", features = ["serde", "v4", "v7"] }
workspace_tools = { version = "0.2.0", features = ["full"] }
# pyo3 = { version = "0.25", optional = true, features = ["extension-module"] }
# wasm-bindgen = { version = "0.2", optional = true }
# wasm-bindgen-futures = { version = "0.4", optional = true }
# js-sys = { version = "0.3", optional = true }
# web-sys = { version = "0.3", optional = true }

[lib]
crate-type = ["rlib"]
name = "tasker_core"
path = "src/lib.rs"

[[bench]]
harness = false
name = "e2e_latency"
path = "tests/benches/e2e_latency.rs"

[dependencies]
clap = { version = "4", features = ["derive"] }
tracing = "0.1"
tracing-subscriber = "0.3"
# Root crate has no library code - all dependencies moved to dev-dependencies
# This prevents circular dependencies and keeps workspace crates independent

[dev-dependencies]
# Test utilities
anyhow = { workspace = true }
chrono = { workspace = true }
# Keep bin/config-validator dependencies
clap = { workspace = true }
criterion = { workspace = true }
dotenvy = { workspace = true }
futures = { workspace = true }
reqwest = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
serial_test = { workspace = true }
sqlx = { workspace = true }
# E2E tests need workspace crates
tasker-client = { path = "tasker-client" }
tasker-orchestration = { path = "tasker-orchestration" }
tasker-shared = { path = "tasker-shared" }
tasker-worker = { path = "tasker-worker" }
tokio = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
uuid = { workspace = true }

[features]
benchmarks = [
  # "tasker-orchestration/benchmarks",
  # "tasker-shared/benchmarks",
  # "tasker-worker/benchmarks",
]
test-utils = [
  "tasker-orchestration/test-utils",
  "tasker-shared/test-utils",
  "tasker-worker/test-utils",
]

[profile.dev]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
strip = true
lto = "fat"
panic = "abort"
codegen-units = 1

# Coverage profile (matches CI)
[profile.coverage]
inherits = "dev"
debug = true
overflow-checks = false
incremental = false
codegen-units = 1

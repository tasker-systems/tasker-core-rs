# TaskTemplate Configuration - Native Rust Implementation
#
# Tree Workflow Pattern with Native Rust Step Handlers
# Demonstrates complex hierarchical tree structure with multiple branches and convergence
#
# Template: tree_workflow/hierarchical_tree:1.0.0
# Implementation: Native Rust with tasker-worker-rust
# Created: 2025-08-29 (TAS-41 Implementation)
#
# Tree Pattern (8 steps):
# 1. Root: Square input (6 → 36)
# 2. Branch Left: Square root result (36 → 1,296)
# 3. Branch Right: Square root result (36 → 1,296) 
# 4. Leaf D: Square left branch (1,296 → 1,679,616)
# 5. Leaf E: Square left branch (1,296 → 1,679,616)
# 6. Leaf F: Square right branch (1,296 → 1,679,616)
# 7. Leaf G: Square right branch (1,296 → 1,679,616)
# 8. Final Convergence: Multiply all 4 leaves and square
# Final result: input^32
#
---
name: hierarchical_tree
namespace_name: rust_e2e_tree
version: 1.0.0
description: "Complex hierarchical tree workflow using native Rust handlers: root → branches → leaves → convergence (input^32)"
metadata:
  author: TAS-41 Native Rust Implementation
  tags:
    - namespace:tree_workflow
    - pattern:hierarchical_tree
    - dependencies:complex_multi_parent
    - implementation:rust
    - performance:native
    - type_safety:compile_time
    - parallelism:multi_branch
    - convergence:four_way
  documentation_url: 
  created_at: "2025-08-29T00:00:00Z"
  updated_at: "2025-08-29T00:00:00Z"
  notes: "Native Rust implementation with complex hierarchical dependency resolution"
task_handler:
  callable: tasker_worker_rust::step_handlers::RustStepHandler
  initialization:
    input_validation:
      required_fields:
        - even_number
      even_number_constraint: must_be_even
      value_range:
        min: 2
        max: 100
    expected_results:
      tree_root: "input²"
      tree_branch_left: "(input²)²"
      tree_branch_right: "(input²)²"
      tree_leaf_d: "((input²)²)²"
      tree_leaf_e: "((input²)²)²"
      tree_leaf_f: "((input²)²)²"
      tree_leaf_g: "((input²)²)²"
      tree_final_convergence: "(((input²)²)² × ((input²)²)² × ((input²)²)² × ((input²)²)²)²"
      final_pattern: "input^32"
    performance_notes:
      - "Hierarchical parallel execution with native Rust performance"
      - "Complex dependency resolution at compile time"
      - "Memory-efficient tree traversal patterns"
system_dependencies:
  primary: default
  secondary: []
domain_events: []
input_schema:
  type: object
  required:
    - even_number
  properties:
    even_number:
      type: integer
      minimum: 2
      maximum: 100
      description: "Even number for hierarchical tree calculation"
steps:
  - name: tree_root
    description: "Tree root: Square the input even number"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeRootHandler
      initialization:
        operation: square
        step_type: root
        description: "Root of the tree: square the input"
        branches:
          - tree_branch_left
          - tree_branch_right
    system_dependency:
    dependencies: []
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_branch_left
    description: "Left branch: Square the root result"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeBranchLeftHandler
      initialization:
        operation: square
        step_type: branch
        branch_side: left
        description: "Left branch: square the root result"
        leaves:
          - tree_leaf_d
          - tree_leaf_e
    system_dependency:
    dependencies:
      - tree_root
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_branch_right
    description: "Right branch: Square the root result"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeBranchRightHandler
      initialization:
        operation: square
        step_type: branch
        branch_side: right
        description: "Right branch: square the root result"
        leaves:
          - tree_leaf_f
          - tree_leaf_g
    system_dependency:
    dependencies:
      - tree_root
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_leaf_d
    description: "Leaf D: Square the left branch result"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeLeafDHandler
      initialization:
        operation: square
        step_type: leaf
        leaf_id: d
        parent_branch: left
        description: "Leaf D: square left branch result"
    system_dependency:
    dependencies:
      - tree_branch_left
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_leaf_e
    description: "Leaf E: Square the left branch result"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeLeafEHandler
      initialization:
        operation: square
        step_type: leaf
        leaf_id: e
        parent_branch: left
        description: "Leaf E: square left branch result"
    system_dependency:
    dependencies:
      - tree_branch_left
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_leaf_f
    description: "Leaf F: Square the right branch result"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeLeafFHandler
      initialization:
        operation: square
        step_type: leaf
        leaf_id: f
        parent_branch: right
        description: "Leaf F: square right branch result"
    system_dependency:
    dependencies:
      - tree_branch_right
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_leaf_g
    description: "Leaf G: Square the right branch result"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeLeafGHandler
      initialization:
        operation: square
        step_type: leaf
        leaf_id: g
        parent_branch: right
        description: "Leaf G: square right branch result"
    system_dependency:
    dependencies:
      - tree_branch_right
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 30
    publishes_events: []
  - name: tree_final_convergence
    description: "Final convergence: Multiply all 4 leaf results and square"
    handler:
      callable: tasker_worker_rust::step_handlers::tree_workflow::TreeFinalConvergenceHandler
      initialization:
        operation: multiply_all_and_square
        step_type: final_convergence
        description: "Converge all 4 leaves: multiply all then square"
        convergence_pattern: "((leaf_d × leaf_e × leaf_f × leaf_g)²)"
        final_result: "input^32"
        leaf_count: 4
    system_dependency:
    dependencies:
      - tree_leaf_d
      - tree_leaf_e
      - tree_leaf_f
      - tree_leaf_g
    retry:
      retryable: true
      limit: 3
      backoff: exponential
      backoff_base_ms: 1000
      max_backoff_ms: 30000
    timeout_seconds: 45
    publishes_events: []
environments:
  test:
    steps:
      - name: tree_root
        timeout_seconds: 10
      - name: tree_branch_left
        timeout_seconds: 10
      - name: tree_branch_right
        timeout_seconds: 10
      - name: tree_leaf_d
        timeout_seconds: 10
      - name: tree_leaf_e
        timeout_seconds: 10
      - name: tree_leaf_f
        timeout_seconds: 10
      - name: tree_leaf_g
        timeout_seconds: 10
      - name: tree_final_convergence
        timeout_seconds: 20
  development:
    steps:
      - name: tree_root
        handler:
          initialization:
            debug_mode: true
            tree_visualization: true
      - name: tree_branch_left
        handler:
          initialization:
            debug_mode: true
            branch_tracking: true
      - name: tree_branch_right
        handler:
          initialization:
            debug_mode: true
            branch_tracking: true
      - name: tree_leaf_d
        handler:
          initialization:
            debug_mode: true
            leaf_tracking: true
      - name: tree_leaf_e
        handler:
          initialization:
            debug_mode: true
            leaf_tracking: true
      - name: tree_leaf_f
        handler:
          initialization:
            debug_mode: true
            leaf_tracking: true
      - name: tree_leaf_g
        handler:
          initialization:
            debug_mode: true
            leaf_tracking: true
      - name: tree_final_convergence
        handler:
          initialization:
            debug_mode: true
            convergence_verification: true
            tree_summary: true
---
name: error_testing
namespace_name: test_errors
version: 1.0.0
description: "Simplified error scenario testing for core failure patterns"
metadata:
  author: "Test Infrastructure"
  tags:
    - namespace:test_errors
    - pattern:error_scenarios
    - implementation:ruby_ffi
    - language:ruby
  created_at: "2025-10-02T00:00:00Z"
  updated_at: "2025-10-03T00:00:00Z"
task_handler:
  callable: ErrorScenarios::ErrorTestingHandler
  initialization:
    error_tracking_enabled: true
system_dependencies:
  primary: test_system
  secondary: []
domain_events: []
input_schema:
  type: object
  properties:
    scenario_type:
      type: string
      enum: ['success', 'permanent_failure', 'retryable_failure']
      description: "Type of error scenario to test"
    test_context:
      type: object
      description: "Additional context for error testing"
steps:
  # Happy Path - Always succeeds immediately
  - name: success_step
    description: "Always succeeds - validates happy path execution"
    handler:
      callable: ErrorScenarios::SuccessHandler
      initialization:
        scenario: success
    system_dependency:
    dependencies: []
    retry:
      retryable: false
      limit: 0
      backoff: exponential
      backoff_base_ms: 100
      max_backoff_ms: 1000
    timeout_seconds: 5
    publishes_events: []

  # Permanent Failure - Fails immediately without retries
  - name: permanent_error_step
    description: "Permanent error that should not be retried"
    handler:
      callable: ErrorScenarios::PermanentErrorHandler
      initialization:
        error_type: permanent
    system_dependency:
    dependencies: []
    retry:
      retryable: false
      limit: 0
      backoff: exponential
      backoff_base_ms: 100
      max_backoff_ms: 1000
    timeout_seconds: 5
    publishes_events: []

  # Retryable Failure - Always fails, retries with minimal backoff
  - name: retryable_error_step
    description: "Retryable error that exhausts retry limit quickly"
    handler:
      callable: ErrorScenarios::RetryableErrorHandler
      initialization:
        error_type: retryable
    system_dependency:
    dependencies: []
    retry:
      retryable: true
      limit: 2
      backoff: exponential
      backoff_base_ms: 100
      max_backoff_ms: 500
    timeout_seconds: 5
    publishes_events: []
environments:
  test:
    steps:
      - name: success_step
        timeout_seconds: 5
        retry:
          backoff_base_ms: 50
          max_backoff_ms: 200
      - name: permanent_error_step
        timeout_seconds: 5
      - name: retryable_error_step
        timeout_seconds: 5
        retry:
          limit: 2
          backoff_base_ms: 50
          max_backoff_ms: 200
